import slugify from 'slugify';

export default (sequelize, DataTypes) => {
  const Product = sequelize.define('Product', { id: { type: DataTypes.BIGINT, primaryKey: true, autoIncrement: true }, sku: { type: DataTypes.STRING(100), unique: true, allowNull: false }, name: { type: DataTypes.STRING(255), allowNull: false }, slug: { type: DataTypes.STRING(300), unique: true }, description: DataTypes.TEXT, category_id: DataTypes.BIGINT, brand_id: DataTypes.BIGINT, selling_price: DataTypes.DECIMAL(12, 2), status: { type: DataTypes.STRING(20), defaultValue: 'draft', validate: { isIn: [['draft', 'published', 'archived']] } }, is_active: { type: DataTypes.BOOLEAN, defaultValue: true }, stock_status: { type: DataTypes.STRING(20), defaultValue: 'instock', }, average_rating: { type: DataTypes.DECIMAL(3, 2), defaultValue: 0.00, }, rating_count: { type: DataTypes.INTEGER, defaultValue: 0, }, }, { tableName: 'products', timestamps: true, createdAt: 'created_at', updatedAt: 'updated_at', hooks: { beforeValidate: (product) => { if (product.name && !product.slug) { product.slug = slugify(product.name, { lower: true, strict: true }); } } } });
  Product.associate = (models) => { Product.belongsTo(models.ProductCategory, { foreignKey: 'category_id', as: 'category' }); Product.belongsTo(models.Brand, { foreignKey: 'brand_id', as: 'brand' }); };
  return Product;
};